0:
  goto 1 if GreaterOr(EntityData[0], 1.0) else 31
1:
  10000[0] <- Multiply(EntityData[0], 3.0)
  goto 29 if Equal(EntityInfoArray[10000[0] + 2], 2.0) else 2
2:
  goto 3 if GreaterOr(EntityData[1], 1.0) else 30
3:
  10000[0] <- Multiply(EntityData[1], 3.0)
  goto when EntityInfoArray[10000[0] + 2]
    2.0 -> 29
    default -> 4
4:
  goto 5 if GreaterOr(EntityData[0], 1.0) else 28
5:
  10000[3] <- Multiply(EntityData[0], 32.0)
  goto 6 if GreaterOr(EntityData[1], 1.0) else 27
6:
  10000[4] <- Multiply(EntityData[1], 32.0)
  goto 7 if GreaterOr(EntityData[0], 1.0) else 26
7:
  10000[5] <- Add(12.0, Multiply(EntityData[0], 32.0))
  10000[5] <- Remap(Subtract(EntityDataArray[10000[5]], Divide(6.0, LevelOption[1])), EntityDataArray[10000[5]], LevelData[14], 0, RuntimeUpdate[2])
  goto 21 if Not(LevelOption[8]) else 8
8:
  goto 9 if LessOr(10000[5], LevelData[15]) else 10
9:
  10000[6] <- 0
  goto 20
10:
  goto 11 if Greater(Add(LevelData[15], 0.5), LevelData[15]) else 25
11:
  goto 12 if LessOr(10000[5], Add(LevelData[15], 0.5)) else 13
12:
  10000[6] <- Remap(LevelData[15], Add(LevelData[15], 0.5), 0, 1.0, 10000[5])
  goto 20
13:
  goto 14 if Greater(Subtract(LevelData[14], 0.5), Add(LevelData[15], 0.5)) else 24
14:
  goto 15 if LessOr(10000[5], Subtract(LevelData[14], 0.5)) else 16
15:
  10000[6] <- Remap(Add(LevelData[15], 0.5), Subtract(LevelData[14], 0.5), 1.0, 1.0, 10000[5])
  goto 20
16:
  goto 17 if Greater(LevelData[14], Subtract(LevelData[14], 0.5)) else 23
17:
  goto 18 if LessOr(10000[5], LevelData[14]) else 19
18:
  10000[6] <- Remap(Subtract(LevelData[14], 0.5), LevelData[14], 1.0, 0, 10000[5])
  goto 20
19:
  10000[6] <- 0
  goto 20
20:
  10000[6] <- Multiply(LevelOption[9], EaseOutQuad(10000[6]))
  goto 21 if LessOr(10000[6], 0) else 22
21:
  goto exit
22:
  10000[7] <- Multiply(EntityDataArray[10000[3]], LevelData[12])
  10000[8] <- Multiply(EntityDataArray[10000[4]], LevelData[12])
  10000[9] <- Subtract(10000[5], Divide(LevelData[11], 2.0))
  10000[10] <- Add(10000[5], Divide(LevelData[11], 2.0))
  10000[11] <- Add(Add(Multiply(LevelData[8], 10000[7]), Multiply(LevelData[9], 10000[9])), LevelData[10])
  10000[0] <- Add(Add(Multiply(LevelData[8], 10000[8]), Multiply(LevelData[9], 10000[9])), LevelData[10])
  10000[1] <- Add(Add(Multiply(LevelData[8], 10000[7]), Multiply(LevelData[9], 10000[10])), LevelData[10])
  10000[2] <- Add(Add(Multiply(LevelData[8], 10000[8]), Multiply(LevelData[9], 10000[10])), LevelData[10])
  Draw(18.0, Divide(Add(Add(Multiply(LevelData[2], 10000[7]), Multiply(LevelData[3], 10000[9])), LevelData[4]), 10000[11]), Divide(Add(Add(Multiply(LevelData[5], 10000[7]), Multiply(LevelData[6], 10000[9])), LevelData[7]), 10000[11]), Divide(Add(Add(Multiply(LevelData[2], 10000[7]), Multiply(LevelData[3], 10000[10])), LevelData[4]), 10000[1]), Divide(Add(Add(Multiply(LevelData[5], 10000[7]), Multiply(LevelData[6], 10000[10])), LevelData[7]), 10000[1]), Divide(Add(Add(Multiply(LevelData[2], 10000[8]), Multiply(LevelData[3], 10000[10])), LevelData[4]), 10000[2]), Divide(Add(Add(Multiply(LevelData[5], 10000[8]), Multiply(LevelData[6], 10000[10])), LevelData[7]), 10000[2]), Divide(Add(Add(Multiply(LevelData[2], 10000[8]), Multiply(LevelData[3], 10000[9])), LevelData[4]), 10000[0]), Divide(Add(Add(Multiply(LevelData[5], 10000[8]), Multiply(LevelData[6], 10000[9])), LevelData[7]), 10000[0]), Add(Add(220000.0, Multiply(Min(EntityDataArray[10000[3]], EntityDataArray[10000[4]]), 100.0)), 10000[5]), 10000[6])
  goto exit
23:
  DebugLog(6.0)
  DebugPause()
  goto exit
24:
  DebugLog(6.0)
  DebugPause()
  goto exit
25:
  DebugLog(6.0)
  DebugPause()
  goto exit
26:
  DebugLog(5.0)
  DebugPause()
  goto exit
27:
  DebugLog(4.0)
  DebugPause()
  goto exit
28:
  DebugLog(3.0)
  DebugPause()
  goto exit
29:
  EntityDespawn[0] <- 1.0
  goto exit
30:
  DebugLog(2.0)
  DebugPause()
  goto exit
31:
  DebugLog(1.0)
  DebugPause()
  goto exit
