0:
  10000[0] <- Multiply(EntityData[0], 3.0)
  goto when EntityInfoArray[10000[0] + 2]
    2.0 -> 2
    default -> 1
1:
  10000[0] <- Multiply(EntityData[1], 3.0)
  goto when EntityInfoArray[10000[0] + 2]
    2.0 -> 19
    default -> 3
2:
  goto when EntityInfoArray[10000[0] + 2]
    2.0 -> 19
    default -> 3
3:
  10000[0] <- Add(1.0, Multiply(EntityData[0], 32.0))
  10000[2] <- Add(1.0, Multiply(EntityData[1], 32.0))
  10000[3] <- Add(13.0, Multiply(EntityData[0], 32.0))
  10000[5] <- Remap(Subtract(EntityDataArray[10000[3]], Divide(6.0, LevelOption[1])), EntityDataArray[10000[3]], LevelData[14], 0.0, RuntimeUpdate[2])
  goto 14 if Not(LevelOption[8]) else 4
4:
  10000[6] <- Add(LevelData[15], 0.5)
  10000[7] <- Subtract(LevelData[14], 0.5)
  goto 5 if LessOr(10000[5], LevelData[15]) else 6
5:
  10000[6] <- 0.0
  goto 13
6:
  goto 7 if LessOr(10000[5], 10000[6]) else 8
7:
  10000[6] <- Remap(LevelData[15], 10000[6], 0.0, 1.0, 10000[5])
  goto 13
8:
  goto 9 if LessOr(10000[5], 10000[7]) else 10
9:
  10000[6] <- Remap(10000[6], 10000[7], 1.0, 1.0, 10000[5])
  goto 13
10:
  goto 11 if LessOr(10000[5], LevelData[14]) else 12
11:
  10000[6] <- Remap(10000[7], LevelData[14], 1.0, 0.0, 10000[5])
  goto 13
12:
  10000[6] <- 0.0
  goto 13
13:
  10000[6] <- Multiply(LevelOption[9], EaseOutQuad(10000[6]))
  goto 14 if LessOr(10000[6], 0.0) else 15
14:
  goto exit
15:
  10000[7] <- Add(Add(Multiply(LevelData[8], Multiply(EntityDataArray[10000[0]], LevelData[12])), Multiply(LevelData[9], Subtract(10000[5], Divide(LevelData[11], 2.0)))), LevelData[10])
  10000[8] <- Add(Add(Multiply(LevelData[8], Multiply(EntityDataArray[10000[2]], LevelData[12])), Multiply(LevelData[9], Subtract(10000[5], Divide(LevelData[11], 2.0)))), LevelData[10])
  10000[1] <- Add(Add(Multiply(LevelData[8], Multiply(EntityDataArray[10000[0]], LevelData[12])), Multiply(LevelData[9], Add(10000[5], Divide(LevelData[11], 2.0)))), LevelData[10])
  10000[3] <- Add(Add(Multiply(LevelData[8], Multiply(EntityDataArray[10000[2]], LevelData[12])), Multiply(LevelData[9], Add(10000[5], Divide(LevelData[11], 2.0)))), LevelData[10])
  goto 16 if Less(EntityDataArray[10000[0]], EntityDataArray[10000[2]]) else 17
16:
  10000[4] <- EntityDataArray[10000[0]]
  goto 18
17:
  10000[4] <- EntityDataArray[10000[2]]
  goto 18
18:
  Draw(18.0, Divide(Add(Add(Multiply(LevelData[2], Multiply(EntityDataArray[10000[0]], LevelData[12])), Multiply(LevelData[3], Subtract(10000[5], Divide(LevelData[11], 2.0)))), LevelData[4]), 10000[7]), Divide(Add(Add(Multiply(LevelData[5], Multiply(EntityDataArray[10000[0]], LevelData[12])), Multiply(LevelData[6], Subtract(10000[5], Divide(LevelData[11], 2.0)))), LevelData[7]), 10000[7]), Divide(Add(Add(Multiply(LevelData[2], Multiply(EntityDataArray[10000[0]], LevelData[12])), Multiply(LevelData[3], Add(10000[5], Divide(LevelData[11], 2.0)))), LevelData[4]), 10000[1]), Divide(Add(Add(Multiply(LevelData[5], Multiply(EntityDataArray[10000[0]], LevelData[12])), Multiply(LevelData[6], Add(10000[5], Divide(LevelData[11], 2.0)))), LevelData[7]), 10000[1]), Divide(Add(Add(Multiply(LevelData[2], Multiply(EntityDataArray[10000[2]], LevelData[12])), Multiply(LevelData[3], Add(10000[5], Divide(LevelData[11], 2.0)))), LevelData[4]), 10000[3]), Divide(Add(Add(Multiply(LevelData[5], Multiply(EntityDataArray[10000[2]], LevelData[12])), Multiply(LevelData[6], Add(10000[5], Divide(LevelData[11], 2.0)))), LevelData[7]), 10000[3]), Divide(Add(Add(Multiply(LevelData[2], Multiply(EntityDataArray[10000[2]], LevelData[12])), Multiply(LevelData[3], Subtract(10000[5], Divide(LevelData[11], 2.0)))), LevelData[4]), 10000[8]), Divide(Add(Add(Multiply(LevelData[5], Multiply(EntityDataArray[10000[2]], LevelData[12])), Multiply(LevelData[6], Subtract(10000[5], Divide(LevelData[11], 2.0)))), LevelData[7]), 10000[8]), Add(Add(220000.0, Multiply(10000[4], 100.0)), 10000[5]), 10000[6])
  goto exit
19:
  EntityDespawn[0] <- 1.0
  goto exit
